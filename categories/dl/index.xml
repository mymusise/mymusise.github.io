<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dl on A little change</title>
    <link>https://mymusise.github.io/categories/dl/</link>
    <description>Recent content in Dl on A little change</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>mymusise</copyright>
    <lastBuildDate>Tue, 03 Nov 2020 19:23:14 +0800</lastBuildDate>
    
	<atom:link href="https://mymusise.github.io/categories/dl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用Transformer构建自己的GPT2模型</title>
      <link>https://mymusise.github.io/post/dl/transformer_example/</link>
      <pubDate>Tue, 03 Nov 2020 19:23:14 +0800</pubDate>
      
      <guid>https://mymusise.github.io/post/dl/transformer_example/</guid>
      <description>前言 OpenAI 发表 GPT2 已经过去一年多了，在网络上也看到有很多个实现的版本。近期想找一个别人训练好的中文模型进行Finetune，网上找了一圈发现大部分</description>
    </item>
    
    <item>
      <title>从另一个角度看深度神经网络</title>
      <link>https://mymusise.github.io/post/dl/other_side_deep_network/</link>
      <pubDate>Sun, 03 Feb 2019 19:23:14 +0800</pubDate>
      
      <guid>https://mymusise.github.io/post/dl/other_side_deep_network/</guid>
      <description>0x00 你的网络怎么处理问题的 最开始尝试用DL去做NLP相关任务时候，时不时会想要怎么解析训练出来的网络是怎么去执行这些任务呢？看过NG老师课程的</description>
    </item>
    
    <item>
      <title>几种词向量的实现</title>
      <link>https://mymusise.github.io/post/nlp/word_counter/</link>
      <pubDate>Sun, 26 Aug 2018 19:20:14 +0800</pubDate>
      
      <guid>https://mymusise.github.io/post/nlp/word_counter/</guid>
      <description>相关理论 要进行文本分析，首先得要把文本特征化，转成程序可以处理的数据格式。特征化一般要把文本切分成词的形式，所以处理文本时都有一部分分词的工</description>
    </item>
    
    <item>
      <title>几个LSTM的变种</title>
      <link>https://mymusise.github.io/post/dl/other-lstm/</link>
      <pubDate>Sat, 16 Jun 2018 19:20:14 +0800</pubDate>
      
      <guid>https://mymusise.github.io/post/dl/other-lstm/</guid>
      <description>前段时间用RNN做了一些实验，这些天总结下在TensorFlow里面看到的一些新奇的RNN模型，具体参考tf.contrib.rnn 主要介绍</description>
    </item>
    
  </channel>
</rss>